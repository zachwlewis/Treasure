<Window x:Name="TreasureMainWindow" x:Class="Treasure.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="Treasure" Height="350" Width="800" Topmost="True" Loaded="TreasureMainWindow_Loaded" AllowDrop="True" DragLeave="TreasureMainWindow_DragLeave" DragEnter="TreasureMainWindow_DragEnter">
	<Window.Resources>
		<Style x:Key="CheckableTreeViewItemStyle" TargetType="{x:Type TreeViewItem}">
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"/>
			<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"/>
			<Setter Property="Padding" Value="1,0,0,0"/>
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
			<Setter Property="FocusVisualStyle">
				<Setter.Value>
					<Style>
						<Setter Property="Control.Template">
							<Setter.Value>
								<ControlTemplate>
									<Rectangle/>
								</ControlTemplate>
							</Setter.Value>
						</Setter>
					</Style>
				</Setter.Value>
			</Setter>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type TreeViewItem}">
						<Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition MinWidth="19" Width="Auto"/>
								<ColumnDefinition Width="Auto"/>
								<ColumnDefinition Width="*"/>
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto"/>
								<RowDefinition/>
							</Grid.RowDefinitions>
							<ToggleButton x:Name="Expander" ClickMode="Press" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}">
								<ToggleButton.Style>
									<Style TargetType="{x:Type ToggleButton}">
										<Setter Property="Focusable" Value="False"/>
										<Setter Property="Width" Value="16"/>
										<Setter Property="Height" Value="16"/>
										<Setter Property="Template">
											<Setter.Value>
												<ControlTemplate TargetType="{x:Type ToggleButton}">
													<Border Background="Transparent" Height="16" Padding="5" Width="16">
														<Path x:Name="ExpandPath" Data="M0,0 L0,6 L6,0 z" Fill="White" Stroke="#FF818181">
															<Path.RenderTransform>
																<RotateTransform Angle="135" CenterY="3" CenterX="3"/>
															</Path.RenderTransform>
														</Path>
													</Border>
													<ControlTemplate.Triggers>
														<Trigger Property="IsChecked" Value="True">
															<Setter Property="RenderTransform" TargetName="ExpandPath">
																<Setter.Value>
																	<RotateTransform Angle="180" CenterY="3" CenterX="3"/>
																</Setter.Value>
															</Setter>
															<Setter Property="Fill" TargetName="ExpandPath" Value="#FF595959"/>
															<Setter Property="Stroke" TargetName="ExpandPath" Value="#FF262626"/>
														</Trigger>
														<Trigger Property="IsMouseOver" Value="True">
															<Setter Property="Stroke" TargetName="ExpandPath" Value="#FF27C7F7"/>
															<Setter Property="Fill" TargetName="ExpandPath" Value="#FFCCEEFB"/>
														</Trigger>
														<MultiTrigger>
															<MultiTrigger.Conditions>
																<Condition Property="IsMouseOver" Value="True"/>
																<Condition Property="IsChecked" Value="True"/>
															</MultiTrigger.Conditions>
															<Setter Property="Stroke" TargetName="ExpandPath" Value="#FF1CC4F7"/>
															<Setter Property="Fill" TargetName="ExpandPath" Value="#FF82DFFB"/>
														</MultiTrigger>
													</ControlTemplate.Triggers>
												</ControlTemplate>
											</Setter.Value>
										</Setter>
									</Style>
								</ToggleButton.Style>
							</ToggleButton>
							<Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Column="1" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
								<!--<ContentPresenter x:Name="PART_Header" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>-->
								<CheckBox x:Name="PART_Header" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" ContentStringFormat="{TemplateBinding HeaderStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" IsThreeState="True"/>
							</Border>
							<ItemsPresenter x:Name="ItemsHost" Grid.ColumnSpan="2" Grid.Column="1" Grid.Row="1"/>
							
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsExpanded" Value="False">
								<Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
							</Trigger>
							<Trigger Property="HasItems" Value="False">
								<Setter Property="Visibility" TargetName="Expander" Value="Hidden"/>
							</Trigger>
							<Trigger Property="IsSelected" Value="True">
								<Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
							</Trigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsSelected" Value="True"/>
									<Condition Property="IsSelectionActive" Value="False"/>
								</MultiTrigger.Conditions>
								<Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}"/>
							</MultiTrigger>
							<Trigger Property="IsEnabled" Value="False">
								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
			<Style.Triggers>
				<Trigger Property="VirtualizingPanel.IsVirtualizing" Value="True">
					<Setter Property="ItemsPanel">
						<Setter.Value>
							<ItemsPanelTemplate>
								<VirtualizingStackPanel IsItemsHost="True"/>
							</ItemsPanelTemplate>
						</Setter.Value>
					</Setter>
				</Trigger>
			</Style.Triggers>
		</Style>
	</Window.Resources>
	<Grid>
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="2*"/>
			<ColumnDefinition/>
		</Grid.ColumnDefinitions>
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto"/>
			<RowDefinition Height="Auto"/>
			<RowDefinition/>
		</Grid.RowDefinitions>
		<Menu Margin="0" VerticalAlignment="Top" BorderThickness="0,0,0,1" BorderBrush="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}" Grid.ColumnSpan="2">
			<MenuItem Header="File" Margin="0" Padding="6,0,6,2">
				<MenuItem x:Name="SaveMenuItem" Header="Save Mapfile" Margin="0" Padding="6,0,6,2" Click="ExitMenuItem_Click" InputGestureText="Ctrl + S"/>
				<Separator Margin="0"/>
				<MenuItem x:Name="ExitMenuItem" Header="Exit" Margin="0" Padding="6,0,6,2" Click="ExitMenuItem_Click" InputGestureText="Ctrl + Q"/>
			</MenuItem>
			<MenuItem Header="Options" Margin="0" Padding="6,0,6,2"/>
		</Menu>
		
		<TreeView x:Name="DirectoryList" Margin="5" Grid.Row="2">
			<TreeView.Resources>
				<Style x:Key="CheckableTreeViewItemStyle" TargetType="{x:Type TreeViewItem}">
					<Setter Property="Background" Value="Transparent"/>
					<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"/>
					<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"/>
					<Setter Property="Padding" Value="1,0,0,0"/>
					<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
					<Setter Property="FocusVisualStyle">
						<Setter.Value>
							<Style>
								<Setter Property="Control.Template">
									<Setter.Value>
										<ControlTemplate>
											<Rectangle/>
										</ControlTemplate>
									</Setter.Value>
								</Setter>
							</Style>
						</Setter.Value>
					</Setter>
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="{x:Type TreeViewItem}">
								<Grid>
									<Grid.ColumnDefinitions>
										<ColumnDefinition MinWidth="19" Width="Auto"/>
										<ColumnDefinition Width="Auto"/>
										<ColumnDefinition Width="*"/>
									</Grid.ColumnDefinitions>
									<Grid.RowDefinitions>
										<RowDefinition Height="Auto"/>
										<RowDefinition/>
									</Grid.RowDefinitions>
									<ToggleButton x:Name="Expander" ClickMode="Press" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}">
										<ToggleButton.Style>
											<Style TargetType="{x:Type ToggleButton}">
												<Setter Property="Focusable" Value="False"/>
												<Setter Property="Width" Value="16"/>
												<Setter Property="Height" Value="16"/>
												<Setter Property="Template">
													<Setter.Value>
														<ControlTemplate TargetType="{x:Type ToggleButton}">
															<Border Background="Transparent" Height="16" Padding="5" Width="16">
																<Path x:Name="ExpandPath" Data="M0,0 L0,6 L6,0 z" Fill="White" Stroke="#FF818181">
																	<Path.RenderTransform>
																		<RotateTransform Angle="135" CenterY="3" CenterX="3"/>
																	</Path.RenderTransform>
																</Path>
															</Border>
															<ControlTemplate.Triggers>
																<Trigger Property="IsChecked" Value="True">
																	<Setter Property="RenderTransform" TargetName="ExpandPath">
																		<Setter.Value>
																			<RotateTransform Angle="180" CenterY="3" CenterX="3"/>
																		</Setter.Value>
																	</Setter>
																	<Setter Property="Fill" TargetName="ExpandPath" Value="#FF595959"/>
																	<Setter Property="Stroke" TargetName="ExpandPath" Value="#FF262626"/>
																</Trigger>
																<Trigger Property="IsMouseOver" Value="True">
																	<Setter Property="Stroke" TargetName="ExpandPath" Value="#FF27C7F7"/>
																	<Setter Property="Fill" TargetName="ExpandPath" Value="#FFCCEEFB"/>
																</Trigger>
																<MultiTrigger>
																	<MultiTrigger.Conditions>
																		<Condition Property="IsMouseOver" Value="True"/>
																		<Condition Property="IsChecked" Value="True"/>
																	</MultiTrigger.Conditions>
																	<Setter Property="Stroke" TargetName="ExpandPath" Value="#FF1CC4F7"/>
																	<Setter Property="Fill" TargetName="ExpandPath" Value="#FF82DFFB"/>
																</MultiTrigger>
															</ControlTemplate.Triggers>
														</ControlTemplate>
													</Setter.Value>
												</Setter>
											</Style>
										</ToggleButton.Style>
									</ToggleButton>
									<Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Column="1" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
										<!--<ContentPresenter x:Name="PART_Header" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>-->
										<CheckBox x:Name="ItemCheckBox" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" ContentStringFormat="{TemplateBinding HeaderStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" IsThreeState="False"/>
									</Border>
									<ItemsPresenter x:Name="ItemsHost" Grid.ColumnSpan="2" Grid.Column="1" Grid.Row="1"/>

								</Grid>
								<ControlTemplate.Triggers>
									<Trigger Property="IsExpanded" Value="False">
										<Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
									</Trigger>
									<Trigger Property="HasItems" Value="False">
										<Setter Property="Visibility" TargetName="Expander" Value="Hidden"/>
									</Trigger>
									<Trigger Property="IsSelected" Value="True">
										<Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
										<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
									</Trigger>
									<MultiTrigger>
										<MultiTrigger.Conditions>
											<Condition Property="IsSelected" Value="True"/>
											<Condition Property="IsSelectionActive" Value="False"/>
										</MultiTrigger.Conditions>
										<Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
										<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}"/>
									</MultiTrigger>
									<Trigger Property="IsEnabled" Value="False">
										<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
									</Trigger>
								</ControlTemplate.Triggers>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
					<Style.Triggers>
						<Trigger Property="VirtualizingPanel.IsVirtualizing" Value="True">
							<Setter Property="ItemsPanel">
								<Setter.Value>
									<ItemsPanelTemplate>
										<VirtualizingStackPanel IsItemsHost="True"/>
									</ItemsPanelTemplate>
								</Setter.Value>
							</Setter>
						</Trigger>
					</Style.Triggers>
				</Style>
			</TreeView.Resources>
		</TreeView>

		<Label x:Name="DropTarget" Content="Drop a folder here." Margin="5" Grid.Row="1" Height="40" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" ScrollViewer.VerticalScrollBarVisibility="Disabled" BorderBrush="#FF7296E0" Background="#7FA5C2FF" BorderThickness="1" IsManipulationEnabled="True" DragLeave="DropTarget_DragLeave" AllowDrop="True" Drop="DropTarget_Drop" DragEnter="DropTarget_DragEnter" Grid.ColumnSpan="2"/>
		<RichTextBox x:Name="MapfileText" Grid.Column="1" Margin="5" Grid.Row="2" FontFamily="Segoe UI Mono" Block.LineHeight="12" TextOptions.TextHintingMode="Animated" AcceptsTab="True" TextOptions.TextFormattingMode="Display">
			<RichTextBox.Resources>
				<Style TargetType="{x:Type Paragraph}">
					<Setter Property="Margin" Value="0"/>
				</Style>
			</RichTextBox.Resources>
		</RichTextBox>

	</Grid>
</Window>
